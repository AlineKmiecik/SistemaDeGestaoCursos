package com.IntegradorDBSystem.IntegradorDBSystem.controller;

import javax.validation.Valid;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.data.web.PageableDefault;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.IntegradorDBSystem.IntegradorDBSystem.dtos.CursoDTO;
import com.IntegradorDBSystem.IntegradorDBSystem.models.CursoModel;
import com.IntegradorDBSystem.IntegradorDBSystem.services.CursoService;

@RestController
public class CursoController {
	@Autowired
    CursoService cursoService;

    @PostMapping("/createCurso")
    public ResponseEntity<CursoModel> sendingEmail(@RequestBody @Valid CursoDTO cursoDto) {
        CursoModel cursoModel = new CursoModel();
        
        //Converte o DTO (requisição) em model
        BeanUtils.copyProperties(cursoDto, cursoModel);
        cursoService.createCurso(cursoModel);
        
        return new ResponseEntity<>(cursoModel, HttpStatus.CREATED);
    }

    @GetMapping("/ListarCursos")
    public ResponseEntity<Page<CursoModel>> getAllEmails(@PageableDefault(page = 0, size = 5, sort = "emailId", direction = Sort.Direction.DESC) Pageable pageable){
        return new ResponseEntity<>(cursoService.findAll(pageable), HttpStatus.OK);
    }

    @GetMapping("/curso/{cursoId}")
    public ResponseEntity<Object> getOneEmail(@PathVariable(value="emailId") UUID emailId){
        Optional<EmailModel> emailModelOptional = emailService.findById(emailId);
        if(!emailModelOptional.isPresent()) {
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Email not found.");
        }else {
            return ResponseEntity.status(HttpStatus.OK).body(emailModelOptional.get());
        }
    }
	
}
