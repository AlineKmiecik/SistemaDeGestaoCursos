package com.IntegradorDBSystem.IntegradorDBSystem.services;

import java.time.LocalDateTime;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import com.IntegradorDBSystem.IntegradorDBSystem.enums.StatusCursoEvento;
import com.IntegradorDBSystem.IntegradorDBSystem.models.AlunoModel;
import com.IntegradorDBSystem.IntegradorDBSystem.repositories.AlunoRepository;

@Service
public class AlunoService {
	@Autowired
	AlunoRepository alunoRepository;
	
	public Enum<StatusCursoEvento> create(AlunoModel AlunoModel) {
		try {
			if(AlunoRepository.existsByNome(AlunoModel.getNome()) ){
				return StatusCursoEvento.ERROR;
			}else{
				AlunoRepository.save(AlunoModel);
			}
			
			
		} catch (Exception e) {
			System.out.println(StatusCursoEvento.ERROR + ": " + e);
			
		}
		return StatusCursoEvento.SUCCESS;
	}
	
	public Page<AlunoModel> findAll(Pageable pageable) {
        return  AlunoRepository.findAll(pageable);
    }

    public Optional<AlunoModel> findById(int AlunoId) {
        return AlunoRepository.findById(AlunoId);
    }
    
    public Enum<StatusCursoEvento> update(AlunoModel cursoModel) {
    	try {
    		if( !alunoRepository.existsByNome(cursoModel.getNome())) {
    			return StatusCursoEvento.ERROR;
    		}else {
    			cursoRepository.save(cursoModel);
    		}
			
			
		} catch (Exception e) {
			System.out.println(StatusCursoEvento.ERROR + ": " + e);
			
		}
    	return StatusCursoEvento.SUCCESS;
    }
    
    public void delete(int cursoId) {
    	CursoModel cursoModelTemp = new CursoModel();
    	cursoModelTemp.setId(cursoId);
        cursoRepository.delete(cursoModelTemp);
    }
	
}
